# -*- coding: utf-8 -*-
"""Code to Run Data Prep (all plays)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P8z4tc5-aZZnqMSaKA4cmSE_EV0wI1ty

#This script was only run once because it creates a dataframe of all examined variables at the time a fly-ball was aquired. It requires the usage of the Functionsnoplots.py script
"""

#mounting google drive
from google.colab import drive
drive.mount('/content/drive')
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
from matplotlib.pyplot import figure
import ipywidgets as widgets
from IPython.display import display
import seaborn as sns
import scipy.stats as stats
import math
import itertools

"""#List of all game files and those which encountered errors"""

gamelistA31903 = ['-1903_27_TeamNH_TeamA3.csv','-1903_26_TeamNH_TeamA3.csv','-1903_25_TeamNH_TeamA3.csv',
                  '-1903_18_TeamNI_TeamA3.csv','-1903_17_TeamNI_TeamA3.csv','-1903_16_TeamNI_TeamA3.csv',
                  '-1903_15_TeamNG_TeamA3.csv', '-1903_14_TeamNG_TeamA3.csv','-1903_13_TeamNG_TeamA3.csv']

gamelistA31902 = ['-1902_27_TeamMH_TeamA3.csv','-1902_26_TeamMH_TeamA3.csv','-1902_25_TeamMH_TeamA3.csv',
                  '-1902_12_TeamMI_TeamA3.csv','-1902_11_TeamMI_TeamA3.csv','-1902_10_TeamMI_TeamA3.csv',
                  '-1902_03_TeamMG_TeamA3.csv', '-1902_02_TeamMG_TeamA3.csv','-1902_01_TeamMG_TeamA3.csv']

gamelistA31901 = ['-1901_18_TeamLH_TeamA3.csv','-1901_17_TeamLH_TeamA3.csv','-1901_16_TeamLH_TeamA3.csv',
                  # '-1901_06_TeamLI_TeamA3.csv', missing left fielder info caused error
                  '-1901_05_TeamLI_TeamA3.csv','-1901_04_TeamLI_TeamA3.csv',
                  '-1901_03_TeamLG_TeamA3.csv', '-1901_02_TeamLG_TeamA3.csv','-1901_01_TeamLG_TeamA3.csv']
TeamA3 = list(itertools.chain(gamelistA31903,
                              gamelistA31902,
                              gamelistA31901))

gamelistA21903 = ['-1903_30_TeamNF_TeamA2.csv','-1903_29_TeamNF_TeamA2.csv','-1903_28_TeamNF_TeamA2.csv',
                  '-1903_07_TeamND_TeamA2.csv','-1903_06_TeamND_TeamA2.csv','-1903_05_TeamND_TeamA2.csv',
                  '-1903_03_TeamNE_TeamA2.csv', '-1903_02_TeamNE_TeamA2.csv','-1903_01_TeamNE_TeamA2.csv']

gamelistA21902 = ['-1902_31_TeamMF_TeamA2.csv','-1902_30_TeamMF_TeamA2.csv','-1902_29_TeamMF_TeamA2.csv',
                  '-1902_21_TeamME_TeamA2.csv','-1902_20_TeamME_TeamA2.csv','-1902_19_TeamME_TeamA2.csv',
                  '-1902_16_TeamMD_TeamA2.csv', '-1902_14_TeamMD_TeamA2.csv','-1902_13_TeamMD_TeamA2.csv']

TeamA2 = list(itertools.chain(gamelistA21903,
                              gamelistA21902))

gamelistA11903 = ['-1903_32_TeamNB_TeamA1.csv','-1903_31_TeamNB_TeamA1.csv','-1903_30_TeamNB_TeamA1.csv',
                  # '-1903_24_TeamNA_TeamA1.csv', Also called an error message not included
                  '-1903_23_TeamNA_TeamA1.csv','-1903_22_TeamNA_TeamA1.csv',
                  '-1903_12_TeamNC_TeamA1.csv', '-1903_11_TeamNC_TeamA1.csv','-1903_04_TeamNC_TeamA1.csv']

gamelistA11902 = ['-1902_28_TeamMC_TeamA1.csv','-1902_26_TeamMC_TeamA1.csv','-1902_24_TeamMA_TeamA1.csv',
                  '-1902_23_TeamMA_TeamA1.csv','-1902_22_TeamMA_TeamA1.csv','-1902_18_TeamMB_TeamA1.csv',
                  '-1902_17_TeamMB_TeamA1.csv']

TeamA1 = list(itertools.chain(gamelistA11903,
                              gamelistA11902))

gamelistB1903 = ['-1903_27_TeamNK_TeamB.csv','-1903_26_TeamNK_TeamB.csv','-1903_25_TeamNK_TeamB.csv',
                  '-1903_21_TeamNL_TeamB.csv','-1903_20_TeamNL_TeamB.csv','-1903_19_TeamNL_TeamB.csv',
                  '-1903_10_TeamNJ_TeamB.csv', '-1903_09_TeamNJ_TeamB.csv','-1903_08_TeamNJ_TeamB.csv']

gamelistB1902 = ['-1902_15_TeamMK_TeamB.csv','-1902_14_TeamMK_TeamB.csv','-1902_13_TeamMK_TeamB.csv',
                  '-1902_09_TeamMJ_TeamB.csv','-1902_08_TeamMJ_TeamB.csv','-1902_07_TeamMJ_TeamB.csv',
                  # '-1902_06_TeamML_TeamB.csv', Also had issues with this one
                  # '-1902_05_TeamML_TeamB.csv', also had issues
                 '-1902_04_TeamML_TeamB.csv']

gamelistB1901 = ['-1901_15_TeamLL_TeamB.csv','-1901_14_TeamLL_TeamB.csv','-1901_13_TeamLL_TeamB.csv',
                  '-1901_12_TeamLJ_TeamB.csv','-1901_11_TeamLJ_TeamB.csv','-1901_10_TeamLJ_TeamB.csv',
                  '-1901_09_TeamLK_TeamB.csv', '-1901_08_TeamLK_TeamB.csv',
                #  '-1901_07_TeamLK_TeamB.csv'also had issues
                 ]

gamelistB1900 = [
                # '-1900_09_TeamKK_TeamB.csv', also had issues
                 '-1900_08_TeamKL_TeamB.csv',
                # '-1900_07_TeamKL_TeamB.csv' also had issues
                  # '-1900_06_TeamKL_TeamB.csv', also had issues
                # '-1900_05_TeamKK_TeamB.csv', also had issues
                # '-1900_04_TeamKK_TeamB.csv',
                  # '-1900_03_TeamKJ_TeamB.csv',
                '-1900_02_TeamKJ_TeamB.csv',
                # '-1900_01_TeamKJ_TeamB.csv'
                ]
TeamB1 = list(itertools.chain(gamelistB1903,
                              gamelistB1902,
                              gamelistB1901,
                              gamelistB1900))
allworkingcsvs = list(itertools.chain(TeamA1,TeamA2,TeamA2,TeamB1))

"""#Running the Functionsnoplots python script. Team names will need to be changed in this code block depending on which team is examined"""

droppedlist =[]
caughtlist = []
##now that I have both dictionaries done, I can compare the values with t-tests.
CCVlist = []
CCAlist = []
RCVlist = []
RCAlist = []
LCVlist = []
LCAlist = []
BCVlist = []
BCAlist = []

#non-caught plays
CVlist = []
CAlist = []
RVlist = []
RAlist = []
LVlist = []
LAlist = []
BVlist = []
BAlist = []

##Need to change this value per team
for n in TeamB1:
  game = n
  print(game)
  if "TeamA3" in n:
    if '1903' in n:
      playerposthing = 'TeamA3/player_pos-1903_TeamA3'
    elif '1902' in n:
      playerposthing = 'TeamA3/player_pos-1902_TeamA3'
    elif '1901' in n:
      playerposthing = 'TeamA3/player_pos-1901_TeamA3'
    else:
      break
  elif "TeamA2" in n:
    if '1903' in n:
      playerposthing = 'TeamA2/player_pos-1903_TeamA2'
    elif '1902' in n:
      playerposthing = 'TeamA2/player_pos-1902_TeamA2'
    else:
      break
  elif "TeamA1" in n:
    if '1903' in n:
      playerposthing = 'TeamA1/player_pos-1903_TeamA1'
    elif '1902' in n:
      playerposthing = 'TeamA1/player_pos-1902_TeamA1'
    else:
      break
  elif "TeamB" in n:
    if '1903' in n:
      playerposthing = 'TeamB/player_pos-1903_TeamB'
    elif '1902' in n:
      playerposthing = 'TeamB/player_pos-1902_TeamB'
    elif '1901' in n:
      playerposthing = 'TeamB/player_pos-1901_TeamB'
    elif '1900' in n:
      playerposthing = 'TeamB/player_pos-1900_TeamB'
    else:
      break



  ###setting everything up with this data file.
  heads = 'drive/MyDrive/SMT_Data_Challenge/smt_data_challenge_2023'
  ginfo = 'game_info'
  csvgameinfo = f'game_info{game}'
  csvgameinfo2 = 'next csv'
  gameinfo = pd.read_csv(f'{heads}/{ginfo}/{csvgameinfo}')

  with open('drive/MyDrive/SMT_Data_Challenge/Colab_Notebooks/Functionsnoplots.py') as f:
   exec(f.read())
    # run my python code
  drop = dropped
  caught = caught
  # print("Got HERE")
  droppedlist.extend(drop)
  caughtlist.extend(caught)
  ##now that I have both dictionaries done, I can compare the values with t-tests.
  #caught plays
  # print("Got HERE2")
  CCVlist.extend(CCV)
  CCAlist.extend(CCA)
  RCVlist.extend(RCV)
  RCAlist.extend(RCA)
  LCVlist.extend(LCV)
  LCAlist.extend(LCA)
  BCVlist.extend(BCV)
  BCAlist.extend(BCA)

  # print("Got HERE3")

  #non-caught plays
  CVlist.extend(CV)
  CAlist.extend(CA)
  RVlist.extend(RV)
  RAlist.extend(RA)
  LVlist.extend(LV)
  LAlist.extend(LA)
  BVlist.extend(BV)
  BAlist.extend(BA)

"""#Create Dataframe for each team and export as csvs
##Need to change csv file name each time the team is changed
"""

dfTeam = pd.DataFrame()
##now that I have both dictionaries done, I can compare the values with t-tests.

#non-caught plays
dfTeam['cv'] = pd.Series(CVlist, dtype = 'float64')
dfTeam['ca'] = pd.Series(CAlist, dtype = 'float64')
dfTeam['rv'] = pd.Series(RVlist, dtype = 'float64')
dfTeam['ra'] = pd.Series(RAlist, dtype = 'float64')
dfTeam['lv'] = pd.Series(LVlist, dtype = 'float64')
dfTeam['la'] = pd.Series(LAlist, dtype = 'float64')
dfTeam['bv'] = pd.Series(BVlist, dtype = 'float64')
dfTeam['ba'] = pd.Series(BAlist, dtype = 'float64')

#caught plays
dfTeam['ccv'] = pd.Series(CCVlist, dtype = 'float64')
dfTeam['cca'] = pd.Series(CCAlist, dtype = 'float64')
dfTeam['rcv'] = pd.Series(RCVlist, dtype = 'float64')
dfTeam['rca'] = pd.Series(RCAlist, dtype = 'float64')
dfTeam['lcv'] = pd.Series(LCVlist, dtype = 'float64')
dfTeam['lca'] = pd.Series(LCAlist, dtype = 'float64')
dfTeam['bcv'] = pd.Series(BCVlist, dtype = 'float64')
dfTeam['bca'] = pd.Series(BCAlist, dtype = 'float64')

dfTeam['Center and Right Distance (Dropped)'] = pd.Series(drop, dtype = 'float64')
dfTeam['Center and Right Distance (Caught)'] = pd.Series(caught, dtype = 'float64')

##Change everytime
dfTeam.to_csv('TeamB1.csv')

"""#Making sure the lengths make sense"""

print(len(CCVlist))
print(len(CCAlist))
print(len(RCVlist))
print(len(RCAlist))
print(len(LCVlist))
print(len(LCAlist))
print(len(BCVlist))
print(len(BCAlist ))

#non-caught plays
print("Non-caught plays")
print(len(CVlist ))
print(len(CAlist))
print(len(RVlist))
print(len(RAlist ))
print(len(LVlist ))
print(len(LAlist))
print(len(BVlist))
print(len(BAlist))

dfTeam
##always make sure the rows match the length they should be.